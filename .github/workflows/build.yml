name: Build

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

        include:
          - os: ubuntu-latest
            platform: Linux

          - os: macos-latest
            platform: Darwin

          - os: windows-latest
            platform: Windows

    steps:
      - name: Set up environment for Linux.
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git make \
            pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev \
            libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev \
            libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev \
            libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
            libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev \
            libpipewire-0.3-dev libwayland-dev libdecor-0-dev liburing-dev

      - name: Set up environment for Darwin.
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake pkg-config ninja libsndfile pulseaudio libx11 libxext libxrandr \
            libxi libxss libxkbcommon libdrm libgbm mesa libdbus libibus libudev libwayland \
            libfreetype libpipewire libjack libpulse libaudiofile libxcb freetype

      - name: Set up environment for Windows.
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-freetype
          update: true

      - name: Checkout SDL.
        uses: actions/checkout@v4
        with:
          repository: libsdl-org/SDL

      - name: Build SDL for Linux or Darwin.
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        shell: bash
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          cmake --install build

      - name: Build SDL for Windows.
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          sudo cmake --install build

      - name: Upload SDL build artifacts.
        uses: actions/upload-artifact@v4
        with:
          name: SDL-${{ matrix.platform }}
          path: |
            build

      - name: Checkout SDL_ttf.
        uses: actions/checkout@v4
        with:
          repository: libsdl-org/SDL_ttf

      - name: Build SDL_ttf for Linux or Darwin.
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        shell: bash
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          sudo cmake --install build

      - name: Build SDL_ttf for Windows.
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          cmake --install build

      - name: Upload SDL_ttf build artifacts.
        uses: actions/upload-artifact@v4
        with:
          name: SDL_ttf-${{ matrix.platform }}
          path: |
            build